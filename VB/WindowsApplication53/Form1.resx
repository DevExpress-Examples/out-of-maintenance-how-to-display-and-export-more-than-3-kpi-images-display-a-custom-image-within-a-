<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>116, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v23.1" name="DevExpress.Utils.v23.1, Version=23.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v23.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMS4yLCBWZXJzaW9uPTIxLjIu
        Ny4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAACAAAAAgAAAACQUAAAAP
        BQAAAKUTAAACnQYAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADrwAAA68AZW8ckkAAAY/SURBVFhHrZd3TJR3GMdNKgfI3lMRJwKCMqSOqnFX3NRB
        qXFBrRNra1u3qaNuROuoRhtLsdaGWmXJEAFBqtSFC7XijumKo03TtH98+3x/974Hp4eByJM8ufPC3ef7
        7NdmjTW/NEf47Rff6wif3Q7w3ukAr6328Eyxh8c6O2h/1rRGaGC6C/galxeKSUVR+LCij8nfP9UT8blh
        iM1oD++V9spdFtu+uhgVrfiY/BAs+LE/Pjsfj+2XZ+PL6kVIv7kSB26uwv7rS/HFtfnYcHEyllUOwwcV
        vTG9tAuGpLeB41wb5drPNc7805zQL7MtPjk9EClVSTh0az2KHh7A2d/ycemPEuV8f/rXbPV55t0dSLux
        AqmXpmNJZSyST3XHlOLO6LrFC/bvWjdOBNM9tiAMq86NVZFW/HIUNc8u4uFfN9Qr4WWPMpB3f58CZ9Rs
        VgKZkb3VH6tsMGNTT3ZFQnEwYvb4wGlaAzNBeGJJDDZXTUPOvT24+rhCgW88qVRQgliG9RcmYsXZUSrt
        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
</value>
  </data>
</root>